syntax = "proto3";

option go_package = "github.com/bluelinecoding/news";
package news;

import "google/protobuf/timestamp.proto";

enum SocialMediaType {
    SOCIAL_MEDIA_TYPE_UNKNOWN = 0;
    SOCIAL_MEDIA_TYPE_FACEBOOK = 1;
    SOCIAL_MEDIA_TYPE_TWITTER = 2;
    // etc...
}

message Feed {
    string id = 1;
    string provider = 2;
    string category = 3;
    string url = 4;
    google.protobuf.Timestamp create_time = 5;
}

message Article {
    string id = 1;
    string title = 2;
    string description = 3;
    string link = 4;
    Image image = 5;
    google.protobuf.Timestamp published_time = 6;
    repeated SocialMediaType social_media = 7;
}

message Image {
    string url = 2;
}

message SocialMedia {
    string type = 1;
    string url = 2;
}

message ListArticlesRequest {
    int32 page_size = 1;        // defaults to 20
    int32 page_index = 2;
    repeated string feed_providers = 3;
    repeated string feed_categories = 4;
}

message ListArticlesResponse {
    repeated Article articles = 1;
}

message AddFeedRequest {
    string provider = 1;
    string category = 2;
    string url = 3; 
}

message AddFeedResponse {
    Feed feed = 1;
}

message ListFeedsRequest {}

message ListFeedsResponse {
    repeated Feed feeds = 1;
}

message DeleteFeedRequest {
    string feed_id = 1;
}

message DeleteFeedResponse {}

message ValidationError {
    string field = 1;
    string message = 2;
}

message ValidationErrors {
    repeated ValidationError errors = 1;
}

service News {
    // List articles from 1 or more news feeds
    rpc ListArticles (ListArticlesRequest) returns (ListArticlesResponse);

    // Add a feed to the API
    rpc AddFeed (AddFeedRequest) returns (AddFeedResponse);

    // Delete a feed from the API
    rpc DeleteFeed (DeleteFeedRequest) returns (DeleteFeedResponse);

    // List all the feeds
    rpc ListFeeds (ListFeedsRequest) returns (ListFeedsResponse);
}